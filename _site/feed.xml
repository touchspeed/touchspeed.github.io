<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-US"><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="en-US" /><updated>2024-07-02T18:19:33+07:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Meve’s blog</title><subtitle>Hello  World</subtitle><author><name>Meve</name></author><entry><title type="html">ddr3 mig</title><link href="http://localhost:4000/ddr3-mig/" rel="alternate" type="text/html" title="ddr3 mig" /><published>2024-07-02T15:03:00+07:00</published><updated>2024-07-02T15:03:00+07:00</updated><id>http://localhost:4000/ddr3-mig</id><content type="html" xml:base="http://localhost:4000/ddr3-mig/"><![CDATA[<h2 id="前言">前言</h2>]]></content><author><name>Meve</name></author><category term="FPGA" /><category term="IP" /><category term="FPGA" /><summary type="html"><![CDATA[前言]]></summary></entry><entry><title type="html">flameshot，平替snipaste</title><link href="http://localhost:4000/flame-shot/" rel="alternate" type="text/html" title="flameshot，平替snipaste" /><published>2024-06-28T19:20:00+07:00</published><updated>2024-06-28T19:20:00+07:00</updated><id>http://localhost:4000/flame-shot</id><content type="html" xml:base="http://localhost:4000/flame-shot/"><![CDATA[<h3 id="前言">前言</h3>

<p>snipaste是我在win上经常用到的一个截图软件，操作方便，贴图功能也很便利。 <br />
由于现在我更多使用linux，便想寻找一个替代品，而flameshot，则是目前我认为linux上最好用的截图软件。 <br />
机器系统为Rocky Linux 8.10。 <br /></p>

<h3 id="获取">获取</h3>

<p>从<a href="https://github.com/flameshot-org/flameshot/releases/tag/v12.1.0">这里</a>下载，最新版本停留在12.1.0，这里我选择下载appimage，可执行单文件，当然也可以下载rpm包之后安装到系统(sudo rpm -ivh xxxx.rpm)。 <br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-06-27-flame-shot/get_flameshot/flameshot_release.png" alt="flameshot_release" /></p>

<h3 id="统一管理便携应用">统一管理便携应用</h3>

<p>将appimage移动到/home/tools/Utilities/ <br />
mv ./Flameshot-12.1.0.x86_64.AppImage /home/tools/Utilities/ <br /></p>

<p>进入/home/tools/Utilities/文件夹，chmod +x Flameshot-12.1.0.x86_64.AppImage给一下执行权限 <br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-06-27-flame-shot/get_flameshot/utilities.png" alt="utilities" /></p>

<p>/home/tools/里面都是我存放的一些应用 <br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-06-27-flame-shot/get_flameshot/home_tools.png" alt="/home/tools/" /></p>

<p>进入/home/tools/bin/ <br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-06-27-flame-shot/get_flameshot/soft_links.png" alt="soft_links" /></p>

<p>将应用的可执行文件软链接到/home/tools/bin/ <br />
ln -snf ../Utilities/Flameshot-12.1.0.x86_64.AppImage ./flameshot <br /></p>

<p>在.bashrc中将可执行文件目录导入PATH <br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-06-27-flame-shot/get_flameshot/tool_path.png" alt="tool_path" /></p>

<p>打开一个新的终端，输入flameshot即可打开软件。<br /></p>

<h3 id="优点">优点</h3>

<p>无需安装，开箱即用，也方便了系统迁移，只要将tools文件夹复制到新机器的/home/下，再在.bashrc中将可执行文件目录导入PATH，就能使用这些软件，当然appimage在不同系统可能还是会遇到某些依赖问题。 <br /></p>

<h3 id="配置快捷键">配置快捷键</h3>

<p>在使用软件的时候，我准备将ctrl+alt+s作为截屏键，flameshot gui是截图命令 <br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-06-27-flame-shot/get_flameshot/shortcut.png" alt="alt text" /></p>

<p>结果发现left alt和left super是反着的，这不能忍(虽然可以调换键帽hh)，我们直接打开gnome tweaks，没有的话可以sudo yum install gnome-tweaks，然后如下图设置可以将按键换回来。 <br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-06-27-flame-shot/get_flameshot/gnome_tweaks.png" alt="gnome_tweaks" /></p>

<h2 id="结束">结束</h2>]]></content><author><name>Meve</name></author><category term="Linux" /><category term="Linux" /><category term="APP" /><summary type="html"><![CDATA[前言]]></summary></entry><entry><title type="html">IC EDA on Windows using WSL</title><link href="http://localhost:4000/ic-eda-on-windows-using-wsl/" rel="alternate" type="text/html" title="IC EDA on Windows using WSL" /><published>2024-05-07T16:00:00+07:00</published><updated>2024-05-07T16:00:00+07:00</updated><id>http://localhost:4000/ic-eda-on-windows-using-wsl</id><content type="html" xml:base="http://localhost:4000/ic-eda-on-windows-using-wsl/"><![CDATA[<h2 id="前言">前言</h2>

<p>本文记录在wsl上使用eda遇到的一些问题，这是我的wsl版本信息:<br />
<img src="wsl.png" alt="alt text" /><br />
基于ubuntu20.04 wsl，安装的synopsys eda大部分版本都是2018。<br />
如果是ubuntu22.04会遇到一些棘手的问题，难以解决。</p>

<h2 id="痛点">痛点</h2>

<p>最最最难受的一点，wsl每次电脑重启mac会变化，导致synopsys、matlab之类的license失效。<br />
<img src="lm1.png" alt="alt text" /><br />
<img src="lm2.png" alt="alt text" /><br />
下面给出解决方法：<br />
在Windows中的C:\Users&lt;your_username&gt;目录下创建一个.wslconfig文件，然后在文件中写入如下内容</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">[</span><span class="err">experimental</span><span class="p">]</span><span class="w">
</span><span class="err">autoMemoryReclaim=gradual</span><span class="w">
</span><span class="err">networkingMode=mirrored</span><span class="w">
</span><span class="err">dnsTunneling=</span><span class="kc">true</span><span class="w">
</span><span class="err">firewall=</span><span class="kc">true</span><span class="w">
</span><span class="err">autoProxy=</span><span class="kc">true</span><span class="w">
</span></code></pre></div></div>
<p>mirror模式下可以发现ifconfig的mac就是真实mac。<br />
<a href="https://unix.stackexchange.com/questions/772303/machine-mac-address-with-ubuntu-on-top-of-wsl2">参考1</a><br />
<a href="https://github.com/microsoft/WSL/issues/5352">参考2</a><br />
<a href="https://github.com/microsoft/WSL/issues/5291">参考3</a><br />
其实我本来是为了解决wsl不走代理的问题，结果发现还可以把eda license mac顺便fix下来。<br /></p>

<h2 id="开始">开始</h2>

<p>使用synopsys installer，setup.sh，缺少libXss.so.1，如图:<br />
<img src="2.png" alt="alt text" /><br />
<a href="https://www.cnblogs.com/taitai139/p/14046962.html">参考此文章</a>，安装libXss1:<br />
<img src="3.png" alt="alt text" /><br /></p>

<p>lmgrd提示no such file，sudo apt-get install lsb-core即可解决<br />
<img src="4.png" alt="alt text" /><br />
<img src="lsb.png" alt="alt text" /><br />
无法创建.flexlm问题:<br />
<img src="5.png" alt="alt text" /><br />
解决:<br />
<img src="6.png" alt="alt text" /><br /></p>

<p>再次lmgrd激活提示端口占用，lmgrd failed to open the tcp port，ps找出进程编号kill掉，再等一段时间就可以再次激活license：<br />
<img src="7.png" alt="alt text" /><br /></p>

<p>dvt正常:<br />
<img src="dvt.png" alt="alt text" /><br /></p>

<p>euclide权限问题，提示不能写权限运行，或run with ‘private_install’，这是目录权限问题导致:<br />
<img src="euclide1.png" alt="alt text" /><br />
改下目录权限即可，用户组改为root，sudo chown root xxxx，如图:<br />
<img src="euclide2.png" alt="alt text" /><br />
euclide cannot open display问题<br />
<img src="euclide3.png" alt="alt text" /><br />
进入euclide的eclipse文件夹，sudo vim euclide<br />
<img src="euclide4.png" alt="alt text" /><br />
如图注释掉<br />
<img src="euclide5.png" alt="alt text" /><br />
可以运行:<br />
<img src="euclide6.png" alt="alt text" /><br />
新的问题，暂时无法解决<br />
<img src="euclide7.png" alt="alt text" /><br /></p>

<p>verdi提示syntax error<br />
<img src="verdi1.png" alt="alt text" /><br />
sudo dpkg-reconfigure dash，选择no，遇到新的问题<br />
<img src="verdi2.png" alt="alt text" /><br />
尝试安装libXmu6找不到<br />
<img src="verdi3.png" alt="alt text" /><br />
search一下，发现了吗，so库是libXmu6，需要安装的是libxmu6，这…<br />
<img src="verdi4.png" alt="alt text" /><br />
新的依赖<br />
<img src="verdi5.png" alt="alt text" /><br /></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>add-apt-repository ppa:linuxuprising/libpng12
<span class="nb">sudo </span>apt update
<span class="nb">sudo </span>apt <span class="nb">install </span>libpng12-0
</code></pre></div></div>

<p>nlint，如图安装依赖<br />
<img src="nlint.png" alt="alt text" /><br />
nlint -gui，如图安装依赖<br />
<img src="nlint1.png" alt="alt text" /><br />
成功<br />
<img src="nlint2.png" alt="alt text" /><br /></p>

<p>spyglass正常<br />
<img src="sg.png" alt="alt text" /><br /></p>

<p>formality，安装csh<br />
<img src="fm.png" alt="alt text" /><br />
新的问题，如图安装依赖libgl1<br />
<img src="fm1.png" alt="alt text" /><br />
成功<br />
<img src="fm2.png" alt="alt text" /><br />
一个警告<br />
<img src="fm3.png" alt="alt text" /><br />
在~/.bashrc中添加，这个还能解决formality、dc交互shell中的上下键乱码<br />
<img src="fm4.png" alt="alt text" /><br /></p>

<p>tmax tetramax<br />
<img src="tmax.png" alt="alt text" /><br />
解决方法<br />
<img src="tmax1.png" alt="alt text" /><br />
<img src="tmax2.png" alt="alt text" /><br />
建立链接<br />
<img src="tmax3.png" alt="alt text" /><br />
安装libmng2<br />
<img src="tmax4.png" alt="alt text" /><br />
建立链接<br />
<img src="tmax5.png" alt="alt text" /><br />
成功<br />
<img src="tmax6.png" alt="alt text" /><br /></p>

<p>lc_shell lib compiler，安装libpulse0<br />
<img src="lc.png" alt="alt text" /><br /></p>

<p>icc_shell ic compiler，遇到glibc问题<br />
<img src="icc.png" alt="alt text" /><br />
网上的解决方法，我没有尝试，从ubuntu22.04退回20.04没有此问题<br />
<img src="icc1.png" alt="alt text" /><br /></p>

<p>tessent -shell<br /></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt <span class="nb">install </span>libgtk2.0-0
<span class="nb">sudo </span>apt <span class="nb">install </span>libpangoxft-1.0-0
</code></pre></div></div>

<p>calibre -gui，invalid operating system<br />
<img src="calibre.png" alt="alt text" /><br />
/etc/redhat-release存有以下系统版本内容就不会再报<br />
<img src="calibre1.png" alt="alt text" /><br />
新建文件填入上面的内容，并设置权限<br />
<img src="calibre2.png" alt="alt text" /><br /></p>

<p>Virtuoso，过程比较乱，没有整理<br />
<img src="image.png" alt="alt text" /><br />
<img src="image-1.png" alt="alt text" /><br />
<img src="image-2.png" alt="alt text" /><br />
<img src="image-3.png" alt="alt text" /><br />
<img src="image-4.png" alt="alt text" /><br />
<img src="image-5.png" alt="alt text" /><br />
<img src="image-6.png" alt="alt text" /><br />
<img src="image-7.png" alt="alt text" /><br />
<img src="image-8.png" alt="alt text" /><br />
<img src="image-9.png" alt="alt text" /><br />
<img src="image-10.png" alt="alt text" /><br />
集成calibre，需要~/.cdsinit<br />
<img src="image-11.png" alt="alt text" /><br />
新建tmp文件夹<br />
<img src="image-12.png" alt="alt text" /><br />
<img src="image-13.png" alt="alt text" /><br />
<img src="image-14.png" alt="alt text" /><br />
<img src="image-15.png" alt="alt text" /><br />
安装字体<br />
<img src="image-16.png" alt="alt text" /><br /></p>]]></content><author><name>Meve</name></author><category term="Linux" /><category term="EDA" /><category term="Linux" /><category term="WSL" /><summary type="html"><![CDATA[前言]]></summary></entry><entry><title type="html">Maths Example with Mathjax</title><link href="http://localhost:4000/maths-example/" rel="alternate" type="text/html" title="Maths Example with Mathjax" /><published>2021-06-17T05:57:49+07:00</published><updated>2021-06-17T05:57:49+07:00</updated><id>http://localhost:4000/maths-example</id><content type="html" xml:base="http://localhost:4000/maths-example/"><![CDATA[<p>Below is an example of maths using mathjax.</p>

<p>Any page needing maths should start with the frontmatter:</p>

<figure class="highlight"><pre><code class="language-markdown" data-lang="markdown">usemathjax: true</code></pre></figure>

\[\begin{align*}
y = y(x,t) &amp;= A e^{i\theta} \\
&amp;= A (\cos \theta + i \sin \theta) \\
&amp;= A (\cos(kx - \omega t) + i \sin(kx - \omega t)) \\
&amp;= A\cos(kx - \omega t) + i A\sin(kx - \omega t)  \\
&amp;= A\cos \Big(\frac{2\pi}{\lambda}x - \frac{2\pi v}{\lambda} t \Big) + i A\sin \Big(\frac{2\pi}{\lambda}x - \frac{2\pi v}{\lambda} t \Big)  \\
&amp;= A\cos \frac{2\pi}{\lambda} (x - v t) + i A\sin \frac{2\pi}{\lambda} (x - v t)
\end{align*}\]

<p>Inline maths can be written with the <code class="language-plaintext highlighter-rouge">\\(</code> and <code class="language-plaintext highlighter-rouge">\\)</code> characters, producing inline maths
such as \(\delta(t) \xrightarrow{\mathscr{F}} 1\).</p>

<p>The above is accomplished with thanks to <a href="https://alanduan.me/random/mathjax/">Alan Duan</a> and <a href="https://webdocs.cs.ualberta.ca/~zichen2/blog/coding/setup/2019/02/17/how-to-add-mathjax-support-to-jekyll.html.">Zichen Vincent Zhang</a>.</p>]]></content><author><name>Meve</name></author><category term="jekyll" /><category term="update" /><summary type="html"><![CDATA[Below is an example of maths using mathjax.]]></summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/welcome-to-jekyll/" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2020-08-29T09:29:20+07:00</published><updated>2020-08-29T09:29:20+07:00</updated><id>http://localhost:4000/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/welcome-to-jekyll/"><![CDATA[<p>You’ll find this post in your <code class="language-plaintext highlighter-rouge">_posts</code> directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run <code class="language-plaintext highlighter-rouge">jekyll serve</code>, which launches a web server and auto-regenerates your site when a file is updated.</p>

<p>Jekyll requires blog post files to be named according to the following format:</p>

<p><code class="language-plaintext highlighter-rouge">YEAR-MONTH-DAY-title.MARKUP</code></p>

<p>Where <code class="language-plaintext highlighter-rouge">YEAR</code> is a four-digit number, <code class="language-plaintext highlighter-rouge">MONTH</code> and <code class="language-plaintext highlighter-rouge">DAY</code> are both two-digit numbers, and <code class="language-plaintext highlighter-rouge">MARKUP</code> is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.</p>

<p>Jekyll also offers powerful support for code snippets:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="k">def</span> <span class="nf">print_hi</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
  <span class="nb">puts</span> <span class="s2">"Hi, </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">"</span>
<span class="k">end</span>
<span class="n">print_hi</span><span class="p">(</span><span class="s1">'Tom'</span><span class="p">)</span>
<span class="c1">#=&gt; prints 'Hi, Tom' to STDOUT.</span></code></pre></figure>

<p>Check out the <a href="https://jekyllrb.com/docs/home">Jekyll docs</a> for more info on how to get the most out of Jekyll. File all bugs/feature requests at <a href="https://github.com/jekyll/jekyll">Jekyll’s GitHub repo</a>. If you have questions, you can ask them on <a href="https://talk.jekyllrb.com/">Jekyll Talk</a>.</p>]]></content><author><name>Meve</name></author><category term="jekyll" /><category term="update" /><summary type="html"><![CDATA[You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.]]></summary></entry><entry><title type="html">How this site was born 👶</title><link href="http://localhost:4000/how-this-site-was-made/" rel="alternate" type="text/html" title="How this site was born 👶" /><published>2018-09-28T09:45:47+07:00</published><updated>2018-09-28T09:45:47+07:00</updated><id>http://localhost:4000/how-this-site-was-made</id><content type="html" xml:base="http://localhost:4000/how-this-site-was-made/"><![CDATA[<p>The website was made using Jekyll the one of open source static sites generator, and using my own simple theme, I called <a href="https://github.com/piharpi/klise">klisé</a>.</p>

<hr />

<p>All the services are free, source code the site was placed on my <a href="https://github.com/piharpi/mahendrata.now.sh">github</a> repository and intergration with <del><a href="https://netlify.com">netlify</a></del> service, another service that you can use is <a href="https://pages.github.com/">github page</a> for hosting your own static site.</p>

<hr />

<h4 id="lets-do-this">Let’s do this</h4>

<p>So, before we start create a site, you need some tools, you can self paced for how to installing each tools, on this guide i’m just want to show you how to install jekyll and deploying in netlify, but make sure you have each tools below.</p>

<h4 id="prerequisites">Prerequisites</h4>

<p>Requirements before we doing magic show.</p>

<ul>
  <li><a href="https://www.ruby-lang.org/en/downloads/">Ruby</a> programming language</li>
  <li><a href="https://git-scm.com">Git</a> (version control)</li>
  <li><a href="https://netlify.com">Netlify</a> and <a href="https://github.com">Github</a> account</li>
  <li><a href="https://bundler.io">Bundler</a></li>
</ul>

<h4 id="installation">Installation</h4>

<p>First, you need some <a href="https://www.staticgen.com/">SSG</a>, there are many kind ssg, but in case i’m using Jekyll cause i’m already familiar with it, open your terminal and type command on below</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>bundle <span class="nb">install </span>jekyll <span class="c"># installing jekyll in your machine</span>
<span class="nv">$ </span>jekyll new my-site <span class="o">&amp;&amp;</span> <span class="nb">cd </span>my-site <span class="c"># create new jekyll project</span>
<span class="nv">$ </span>jekyll s <span class="c"># run jekyll server</span>
</code></pre></div></div>

<p>Now, jekyll is running on your local machine, open your browser and go to <code class="language-plaintext highlighter-rouge">localhost:4000</code> is default address from jekyll, press <kbd>CTRL</kbd> + <kbd>C</kbd> to stop the jekyll server.</p>

<h4 id="adding-remote-repository">Adding remote repository</h4>

<p>Before we adding remote repository, you must have <a href="https://github.com/new">github</a> repository, if already have repository, just add github remote address to your local folder, with the following commands</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>git init <span class="c"># initializing project folder</span>
<span class="nv">$ </span>git remote add origin https://github.com/YOUR-USERNAME/YOUR-REPO.git <span class="c"># change UPPERCASE with your own!</span>
<span class="nv">$ </span>git add <span class="nt">-A</span> <span class="o">&amp;&amp;</span> git commit <span class="nt">-m</span> <span class="s2">"Initialize"</span> <span class="o">&amp;&amp;</span> git push <span class="nt">-u</span> origin master <span class="c"># push code to github</span>
</code></pre></div></div>

<p>Now check your github repository, make sure the files is uploaded correctly.</p>

<h4 id="deploying-to-netlify">Deploying to netlify</h4>

<p>Go <a href="https://netlify.com">netlify</a> dashboard, and following this step.</p>

<ol>
  <li>click <code class="language-plaintext highlighter-rouge">new site from git</code>, then choose <code class="language-plaintext highlighter-rouge">Github</code>.</li>
  <li>then choose your repository where is the jekyll sources uploaded.</li>
  <li>netlify smart enough to configuring, we just need’s are hosting’s are hosting’s are hosting’s are hosting to click <code class="language-plaintext highlighter-rouge">Deploy site button</code>.</li>
</ol>

<p>Wait for moment, and voila..! your site’s are hosting and using <code class="language-plaintext highlighter-rouge">.netlify.com</code> tld, if your website wants to look professional, just buy a domain from your favorite domain store. or if you the first time, I advice using namecheap.com<em>(isn’t sponsor)</em> *based on my experienced it provides good service and have various TLDs.</p>

<p>So, what you waiting for, just create your own website for free.</p>]]></content><author><name>Meve</name></author><category term="blog" /><category term="netlify" /><category term="jekyll" /><category term="github" /><summary type="html"><![CDATA[All the services are free, a source code this site placed on github repository and intergration with netlify service, another service that you can use is github page for hosting your own static site.]]></summary></entry></feed>