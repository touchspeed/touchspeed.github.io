<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-US"><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="en-US" /><updated>2024-07-04T22:17:00+07:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Meve’s blog</title><subtitle>Hello  World</subtitle><author><name>Meve</name></author><entry><title type="html">部分工作内容展示</title><link href="http://localhost:4000/work-prjs/" rel="alternate" type="text/html" title="部分工作内容展示" /><published>2024-07-03T14:00:00+07:00</published><updated>2024-07-03T14:00:00+07:00</updated><id>http://localhost:4000/work-prjs</id><content type="html" xml:base="http://localhost:4000/work-prjs/"><![CDATA[<h2 id="部分工作内容展示">部分工作内容展示</h2>

<p>一些工作内容或不便展示，这里只作部分展示<br /></p>

<h2 id="-dsc-ip-simulation--integration-">● DSC IP Simulation &amp; Integration <br /></h2>

<p>dsc enc dec structure<br />
<img src="1.png" alt="alt text" /><br />
<img src="2.png" alt="alt text" /><br /></p>

<p>由于wholechip基于smic .11工艺，需要使用smic .11 memory compiler产生memory替换ip环境自带的tsmc memory<br />
<img src="3.png" alt="alt text" /><br /></p>

<p>由于ip自带的部分ram depth跑不满，自己产生ram时可以产生小一点的替换，这就可以节省一点面积。而部分自带的ram虽然需要的depth比较小，但我们的mc工具限制了minimum depth，所以即使有部分浪费也只能使用。<br />
<img src="4.png" alt="alt text" /><br /></p>

<p>单口ram和双口ram选用也要分情况，像ip自带的128x128的这种ram，smic .11 mc能产生的maximum bits为64(两个ram一组即可)，而对于depth，虽然mc可以产生128x64的双口ram，但最终面积比256x64的单口ram面积还大，所以最后选用256x64的单口ram以节省面积。<br />
<img src="5.png" alt="alt text" /><br />
<img src="6.png" alt="alt text" /><br />
<img src="7.png" alt="alt text" /><br /></p>

<h2 id="-2d-scaler">● 2D Scaler<br /></h2>
<p>Example of 2D Scaler for 1920x1080 scale down to 1900x800<br />
<img src="8.png" alt="alt text" /><br />
scale down structure<br />
<img src="9.png" alt="alt text" /><br />
scale up structure<br />
<img src="10.png" alt="alt text" /><br /></p>

<h2 id="-tcon-project-mpw-tapeout">● TCON Project (MPW Tapeout)<br /></h2>

<p>tcon to panel using gowin fpga<br />
<img src="11.png" alt="alt text" /><br />
tcon structre<br />
<img src="12.png" alt="alt text" /><br />
lvds rx structure<br />
<img src="13.png" alt="alt text" /><br />
mini-lvds tx structure<br />
<img src="14.png" alt="alt text" /><br /></p>

<h2 id="-bt656-decoder">● BT656 Decoder<br /></h2>

<p><img src="15.png" alt="alt text" /><br />
<img src="16.png" alt="alt text" /><br /></p>]]></content><author><name>Meve</name></author><category term="JOB" /><category term="JOB" /><summary type="html"><![CDATA[部分工作内容展示]]></summary></entry><entry><title type="html">ddr3 mig</title><link href="http://localhost:4000/ddr3-mig/" rel="alternate" type="text/html" title="ddr3 mig" /><published>2024-07-02T15:03:00+07:00</published><updated>2024-07-02T15:03:00+07:00</updated><id>http://localhost:4000/ddr3-mig</id><content type="html" xml:base="http://localhost:4000/ddr3-mig/"><![CDATA[<h2 id="前言">前言</h2>]]></content><author><name>Meve</name></author><category term="FPGA" /><category term="IP" /><category term="FPGA" /><summary type="html"><![CDATA[前言]]></summary></entry><entry><title type="html">flameshot，平替snipaste</title><link href="http://localhost:4000/flame-shot/" rel="alternate" type="text/html" title="flameshot，平替snipaste" /><published>2024-06-28T19:20:00+07:00</published><updated>2024-06-28T19:20:00+07:00</updated><id>http://localhost:4000/flame-shot</id><content type="html" xml:base="http://localhost:4000/flame-shot/"><![CDATA[<h3 id="前言">前言</h3>

<p>snipaste是我在win上经常用到的一个截图软件，操作方便，贴图功能也很便利。 <br />
由于现在我更多使用linux，便想寻找一个替代品，而flameshot，则是目前我认为linux上最好用的截图软件。 <br />
机器系统为Rocky Linux 8.10。 <br /></p>

<h3 id="获取">获取</h3>

<p>从<a href="https://github.com/flameshot-org/flameshot/releases/tag/v12.1.0">这里</a>下载，最新版本停留在12.1.0，这里我选择下载appimage，可执行单文件，当然也可以下载rpm包之后安装到系统(sudo rpm -ivh xxxx.rpm)。 <br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-06-27-flame-shot/get_flameshot/flameshot_release.png" alt="flameshot_release" /></p>

<h3 id="统一管理便携应用">统一管理便携应用</h3>

<p>将appimage移动到/home/tools/Utilities/ <br />
mv ./Flameshot-12.1.0.x86_64.AppImage /home/tools/Utilities/ <br /></p>

<p>进入/home/tools/Utilities/文件夹，chmod +x Flameshot-12.1.0.x86_64.AppImage给一下执行权限 <br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-06-27-flame-shot/get_flameshot/utilities.png" alt="utilities" /></p>

<p>/home/tools/里面都是我存放的一些应用 <br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-06-27-flame-shot/get_flameshot/home_tools.png" alt="/home/tools/" /></p>

<p>进入/home/tools/bin/ <br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-06-27-flame-shot/get_flameshot/soft_links.png" alt="soft_links" /></p>

<p>将应用的可执行文件软链接到/home/tools/bin/ <br />
ln -snf ../Utilities/Flameshot-12.1.0.x86_64.AppImage ./flameshot <br /></p>

<p>在.bashrc中将可执行文件目录导入PATH <br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-06-27-flame-shot/get_flameshot/tool_path.png" alt="tool_path" /></p>

<p>打开一个新的终端，输入flameshot即可打开软件。<br /></p>

<h3 id="优点">优点</h3>

<p>无需安装，开箱即用，也方便了系统迁移，只要将tools文件夹复制到新机器的/home/下，再在.bashrc中将可执行文件目录导入PATH，就能使用这些软件，当然appimage在不同系统可能还是会遇到某些依赖问题。 <br /></p>

<h3 id="配置快捷键">配置快捷键</h3>

<p>在使用软件的时候，我准备将ctrl+alt+s作为截屏键，flameshot gui是截图命令 <br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-06-27-flame-shot/get_flameshot/shortcut.png" alt="alt text" /></p>

<p>结果发现left alt和left super是反着的，这不能忍(虽然可以调换键帽hh)，我们直接打开gnome tweaks，没有的话可以sudo yum install gnome-tweaks，然后如下图设置可以将按键换回来。 <br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-06-27-flame-shot/get_flameshot/gnome_tweaks.png" alt="gnome_tweaks" /></p>

<h2 id="结束">结束</h2>]]></content><author><name>Meve</name></author><category term="Linux" /><category term="Linux" /><category term="APP" /><summary type="html"><![CDATA[前言]]></summary></entry><entry><title type="html">IC EDA on Windows using WSL</title><link href="http://localhost:4000/ic-eda-on-windows-using-wsl/" rel="alternate" type="text/html" title="IC EDA on Windows using WSL" /><published>2024-05-07T16:00:00+07:00</published><updated>2024-05-07T16:00:00+07:00</updated><id>http://localhost:4000/ic-eda-on-windows-using-wsl</id><content type="html" xml:base="http://localhost:4000/ic-eda-on-windows-using-wsl/"><![CDATA[<h2 id="前言">前言</h2>

<p>本文记录在wsl上使用eda遇到的一些问题，这是我的wsl版本信息:<br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/wsl.png" alt="alt text" /><br />
基于ubuntu20.04 wsl，安装的synopsys eda大部分版本都是2018。<br />
如果是ubuntu22.04会遇到一些棘手的问题，难以解决。</p>

<h2 id="痛点">痛点</h2>

<p>最最最难受的一点，wsl每次电脑重启mac会变化，导致synopsys、matlab之类的license失效。<br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/lm1.png" alt="alt text" /><br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/lm2.png" alt="alt text" /><br />
下面给出解决方法：<br />
在Windows中的C:\Users\ [your_username]目录下创建一个.wslconfig文件，然后在文件中写入如下内容</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">[</span><span class="err">experimental</span><span class="p">]</span><span class="w">
</span><span class="err">autoMemoryReclaim=gradual</span><span class="w">
</span><span class="err">networkingMode=mirrored</span><span class="w">
</span><span class="err">dnsTunneling=</span><span class="kc">true</span><span class="w">
</span><span class="err">firewall=</span><span class="kc">true</span><span class="w">
</span><span class="err">autoProxy=</span><span class="kc">true</span><span class="w">
</span></code></pre></div></div>
<p>mirror模式下可以发现ifconfig的mac就是真实mac。<br />
<a href="https://unix.stackexchange.com/questions/772303/machine-mac-address-with-ubuntu-on-top-of-wsl2">参考1</a><br />
<a href="https://github.com/microsoft/WSL/issues/5352">参考2</a><br />
<a href="https://github.com/microsoft/WSL/issues/5291">参考3</a><br />
<a href="https://github.com/microsoft/WSL/issues/10753">参考4</a><br />
本来是为了解决wsl不走代理的问题，结果发现这样可以固定eda license mac。<br /></p>

<h2 id="开始">开始</h2>

<p>使用synopsys installer，setup.sh，缺少libXss.so.1，如图:<br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/2.png" alt="alt text" /><br />
<a href="https://www.cnblogs.com/taitai139/p/14046962.html">参考此文章</a>，安装libXss1:<br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/3.png" alt="alt text" /><br /></p>

<p>lmgrd提示no such file，sudo apt-get install lsb-core即可解决<br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/4.png" alt="alt text" /><br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/lsb.png" alt="alt text" /><br />
无法创建.flexlm问题:<br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/5.png" alt="alt text" /><br />
解决:<br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/6.png" alt="alt text" /><br /></p>

<p>再次lmgrd激活提示端口占用，lmgrd failed to open the tcp port，ps找出进程编号kill掉，再等一段时间就可以再次激活license：<br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/7.png" alt="alt text" /><br /></p>

<p>dvt正常:<br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/dvt.png" alt="alt text" /><br /></p>

<p>euclide权限问题，提示不能写权限运行，或run with ‘private_install’，这是目录权限问题导致:<br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/euclide1.png" alt="alt text" /><br />
改下目录权限即可，用户组改为root，sudo chown root xxxx，如图:<br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/euclide2.png" alt="alt text" /><br />
euclide cannot open display问题<br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/euclide3.png" alt="alt text" /><br />
进入euclide的eclipse文件夹，sudo vim euclide<br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/euclide4.png" alt="alt text" /><br />
如图注释掉<br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/euclide5.png" alt="alt text" /><br />
可以运行:<br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/euclide6.png" alt="alt text" /><br />
新的问题，暂时无法解决<br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/euclide7.png" alt="alt text" /><br /></p>

<p>verdi提示syntax error<br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/verdi1.png" alt="alt text" /><br />
sudo dpkg-reconfigure dash，选择no，遇到新的问题<br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/verdi2.png" alt="alt text" /><br />
尝试安装libXmu6找不到<br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/verdi3.png" alt="alt text" /><br />
search一下，发现了吗，so库是libXmu6，需要安装的是libxmu6，这…<br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/verdi4.png" alt="alt text" /><br />
新的依赖<br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/verdi5.png" alt="alt text" /><br /></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>add-apt-repository ppa:linuxuprising/libpng12
<span class="nb">sudo </span>apt update
<span class="nb">sudo </span>apt <span class="nb">install </span>libpng12-0
</code></pre></div></div>

<p>nlint，如图安装依赖<br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/nlint.png" alt="alt text" /><br />
nlint -gui，如图安装依赖<br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/nlint1.png" alt="alt text" /><br />
成功<br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/nlint2.png" alt="alt text" /><br /></p>

<p>spyglass正常<br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/sg.png" alt="alt text" /><br /></p>

<p>formality，安装csh<br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/fm.png" alt="alt text" /><br />
新的问题，如图安装依赖libgl1<br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/fm1.png" alt="alt text" /><br />
成功<br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/fm2.png" alt="alt text" /><br />
一个警告<br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/fm3.png" alt="alt text" /><br />
在~/.bashrc中添加，这个还能解决formality、dc交互shell中的上下键乱码<br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/fm4.png" alt="alt text" /><br /></p>

<p>tmax tetramax<br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/tmax.png" alt="alt text" /><br />
解决方法<br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/tmax1.png" alt="alt text" /><br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/tmax2.png" alt="alt text" /><br />
建立链接<br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/tmax3.png" alt="alt text" /><br />
安装libmng2<br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/tmax4.png" alt="alt text" /><br />
建立链接<br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/tmax5.png" alt="alt text" /><br />
成功<br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/tmax6.png" alt="alt text" /><br /></p>

<p>lc_shell lib compiler，安装libpulse0<br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/lc.png" alt="alt text" /><br /></p>

<p>icc_shell ic compiler，遇到glibc问题<br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/icc.png" alt="alt text" /><br />
网上的解决方法，我没有尝试，从ubuntu22.04退回20.04没有此问题<br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/icc1.png" alt="alt text" /><br /></p>

<p>tessent -shell<br /></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt <span class="nb">install </span>libgtk2.0-0
<span class="nb">sudo </span>apt <span class="nb">install </span>libpangoxft-1.0-0
</code></pre></div></div>

<p>calibre -gui，invalid operating system<br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/calibre.png" alt="alt text" /><br />
/etc/redhat-release存有以下系统版本内容就不会再报<br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/calibre1.png" alt="alt text" /><br />
新建文件填入上面的内容，并设置权限<br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/calibre2.png" alt="alt text" /><br /></p>

<p>Virtuoso，过程比较乱，没有整理<br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/image.png" alt="alt text" /><br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/image-1.png" alt="alt text" /><br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/image-2.png" alt="alt text" /><br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/image-3.png" alt="alt text" /><br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/image-4.png" alt="alt text" /><br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/image-5.png" alt="alt text" /><br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/image-6.png" alt="alt text" /><br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/image-7.png" alt="alt text" /><br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/image-8.png" alt="alt text" /><br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/image-9.png" alt="alt text" /><br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/image-10.png" alt="alt text" /><br />
集成calibre，需要~/.cdsinit<br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/image-11.png" alt="alt text" /><br />
新建tmp文件夹<br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/image-12.png" alt="alt text" /><br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/image-13.png" alt="alt text" /><br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/image-14.png" alt="alt text" /><br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/image-15.png" alt="alt text" /><br />
安装字体<br />
<img src="https://raw.githubusercontent.com/touchspeed/touchspeed.github.io/main/_posts/2024-05-07-ic-eda-on-windows-using-wsl/image-16.png" alt="alt text" /><br /></p>

<h2 id="最后">最后</h2>
<p>折腾了很久，最后还是用回Linux实机，顺便把我用了几年的kubuntu本子换成了Rocky Linux，虽然ubuntu系列在娱乐方面有优势，但是最近我遇到了一个关于vivado的bug，让我直接选择奔向rhel系。<br />
环境迁移倒是很简单，备份一下home，再把需要的文件解压到新系统就可以，EDA不需要安装可以直接运行遇到依赖问题修复下就可以，repoquery –nvr –whatprovides真的很方便。<br />
而nvidia驱动方面，就没有ubuntu那么方便，折腾半天才把驱动跑起来:D</p>]]></content><author><name>Meve</name></author><category term="Linux" /><category term="EDA" /><category term="Linux" /><category term="WSL" /><summary type="html"><![CDATA[前言]]></summary></entry></feed>